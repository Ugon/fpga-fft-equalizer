/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("bclk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dacdat")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("daclrc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sample_available_to_dac")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("state_dbg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_dbg[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("state_dbg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_dbg";
}

SIGNAL("transmit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("left_channel_sample_to_dac[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("right_channel_sample_to_dac[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("left_channel_sample_to_dac")
{
	MEMBERS = "left_channel_sample_to_dac[23]", "left_channel_sample_to_dac[22]", "left_channel_sample_to_dac[21]", "left_channel_sample_to_dac[20]", "left_channel_sample_to_dac[19]", "left_channel_sample_to_dac[18]", "left_channel_sample_to_dac[17]", "left_channel_sample_to_dac[16]", "left_channel_sample_to_dac[15]", "left_channel_sample_to_dac[14]", "left_channel_sample_to_dac[13]", "left_channel_sample_to_dac[12]", "left_channel_sample_to_dac[11]", "left_channel_sample_to_dac[10]", "left_channel_sample_to_dac[9]", "left_channel_sample_to_dac[8]", "left_channel_sample_to_dac[7]", "left_channel_sample_to_dac[6]", "left_channel_sample_to_dac[5]", "left_channel_sample_to_dac[4]", "left_channel_sample_to_dac[3]", "left_channel_sample_to_dac[2]", "left_channel_sample_to_dac[1]", "left_channel_sample_to_dac[0]";
}

GROUP("right_channel_sample_to_dac")
{
	MEMBERS = "right_channel_sample_to_dac[23]", "right_channel_sample_to_dac[22]", "right_channel_sample_to_dac[21]", "right_channel_sample_to_dac[20]", "right_channel_sample_to_dac[19]", "right_channel_sample_to_dac[18]", "right_channel_sample_to_dac[17]", "right_channel_sample_to_dac[16]", "right_channel_sample_to_dac[15]", "right_channel_sample_to_dac[14]", "right_channel_sample_to_dac[13]", "right_channel_sample_to_dac[12]", "right_channel_sample_to_dac[11]", "right_channel_sample_to_dac[10]", "right_channel_sample_to_dac[9]", "right_channel_sample_to_dac[8]", "right_channel_sample_to_dac[7]", "right_channel_sample_to_dac[6]", "right_channel_sample_to_dac[5]", "right_channel_sample_to_dac[4]", "right_channel_sample_to_dac[3]", "right_channel_sample_to_dac[2]", "right_channel_sample_to_dac[1]", "right_channel_sample_to_dac[0]";
}

SIGNAL("transmission_to_dac_ongoing")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("bclk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("dacdat")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("daclrc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1420.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 6840.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("reset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("sample_available_to_dac")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 330.0;
		LEVEL 0 FOR 2630.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6880.0;
	}
}

TRANSITION_LIST("state_dbg[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("state_dbg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

TRANSITION_LIST("transmit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 9940.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("left_channel_sample_to_dac[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 2650.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("right_channel_sample_to_dac[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 6860.0;
	}
}

TRANSITION_LIST("transmission_to_dac_ongoing")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "reset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "transmit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bclk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daclrc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dacdat";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "left_channel_sample_to_dac[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "right_channel_sample_to_dac[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sample_available_to_dac";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "state_dbg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "transmission_to_dac_ongoing";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
